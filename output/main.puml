' Generated by UML Generator
' Encoded: dLLTRziW57tthq1zSjQasdEqLKsQRehMRf5IQPgcFM2uTL0nM83NU57_-m1Z1-9gtVPYcyizvrpV3xZI1YlJL3pJZqpKME4A4OwrNXYZMD4OM1CfjkmNeBVPZb50X2d28Sky5_gYA2Xqo12Q4Sn9mx6HQewkXs_q7WbuYWpvn3apkW7Ag9oZhTKHfRDnPeDPACEifzHpj50AjxVM-CuRELmwhvbzd7jPpnG-J_ccw7Ks3o_1h0CsdqJHdEjeuvJTElwKZ0RyRQBaM5wCt36UkFv5Z8dIHoMrlfS6SwT2PLFOIdHRAwQ9R8G1Uhh_tDSgSFv7jOIi2WLnhGWMXb5CvuW9umor0i9a5DICWYOD29COVVL285tz-aMgCKM9mXIb_5CqOk-h-TdpZ6ePpAbAcjtheEYmtLyvu61D0agH6nzSMXCzcDFGK-Ig_uqH-BWp_jLnKomgL_m_TCLB3aPsQOYIDJJB5h0Ykp3RDXwt-YeLpP_i8vsoEV8jsvbSnnPISi0YnE1GotOjAEppiVlKPjFkz4cDQ-OabwrDuWFRkoJQrol2yT9nF31kG2tRJz2wiFF7xlsFB5qaDtjCp6Qdi8QyzgyZZS0Lw7xv_KUKWY6VTvY9Rl8ETkPjopyZBaih9iiItDnr7n-iY5JjXJjMl25tm0lFCHa6QA2ex6QELPcA--OObAFfFYJWcxlD_RSUQ2CuWwesxTcWKZNSi9gtEGupMFHL2jDXRmQ2ZTlk4r54anMLigcSKp-wHTJ7nsQaeLLpx3lrw5w38d0q9A3-58FkqEkWEfHmvTqkavEmkw_Up6PHMe9HMcCuZBB-g3nnl091xLtv6m
' URL: http://www.plantuml.com/plantuml/uml/dLLTRziW57tthq1zSjQasdEqLKsQRehMRf5IQPgcFM2uTL0nM83NU57_-m1Z1-9gtVPYcyizvrpV3xZI1YlJL3pJZqpKME4A4OwrNXYZMD4OM1CfjkmNeBVPZb50X2d28Sky5_gYA2Xqo12Q4Sn9mx6HQewkXs_q7WbuYWpvn3apkW7Ag9oZhTKHfRDnPeDPACEifzHpj50AjxVM-CuRELmwhvbzd7jPpnG-J_ccw7Ks3o_1h0CsdqJHdEjeuvJTElwKZ0RyRQBaM5wCt36UkFv5Z8dIHoMrlfS6SwT2PLFOIdHRAwQ9R8G1Uhh_tDSgSFv7jOIi2WLnhGWMXb5CvuW9umor0i9a5DICWYOD29COVVL285tz-aMgCKM9mXIb_5CqOk-h-TdpZ6ePpAbAcjtheEYmtLyvu61D0agH6nzSMXCzcDFGK-Ig_uqH-BWp_jLnKomgL_m_TCLB3aPsQOYIDJJB5h0Ykp3RDXwt-YeLpP_i8vsoEV8jsvbSnnPISi0YnE1GotOjAEppiVlKPjFkz4cDQ-OabwrDuWFRkoJQrol2yT9nF31kG2tRJz2wiFF7xlsFB5qaDtjCp6Qdi8QyzgyZZS0Lw7xv_KUKWY6VTvY9Rl8ETkPjopyZBaih9iiItDnr7n-iY5JjXJjMl25tm0lFCHa6QA2ex6QELPcA--OObAFfFYJWcxlD_RSUQ2CuWwesxTcWKZNSi9gtEGupMFHL2jDXRmQ2ZTlk4r54anMLigcSKp-wHTJ7nsQaeLLpx3lrw5w38d0q9A3-58FkqEkWEfHmvTqkavEmkw_Up6PHMe9HMcCuZBB-g3nnl091xLtv6m
' Generated on: 2025-10-23T19:58:59.379981

@startuml
skinparam classAttributeIconSize 0
hide circle

class Order {
  -calculator: Calculator = new Calculator()
  -idPedido: String
  -listaArticulos: ArrayList<Article>
  --
  +Order()
  +Order(idPedido: String, listaArticulos: ArrayList<Article>)
  +getIdPedido(): String
  +setIdPedido(idPedido: String): void
  +getListaArticulos(): ArrayList<Article>
  +setListaArticulos(listaArticulos: ArrayList<Article>): void
  +getGrossTotal(): double
  +getDiscountedTotal(): double
}

class Article {
  -calculator: Calculator = new Calculator()
  -nombre: String
  -cantidad: int
  -precio: double
  -descuento: double
  --
  +Article()
  +Article(nombre: String, cantidad: int, precio: double, descuento: double)
  +getNombre(): String
  +setNombre(nombre: String): void
  +getCantidad(): int
  +setCantidad(cantidad: int): void
  +getPrecio(): double
  +setPrecio(precio: double): void
  +getDescuento(): double
  +setDescuento(descuento: double): void
  +getGrossAmount(): double
  +getDiscountedAmount(): double
  +toString(): String
}

class Searcher {
  +searchWord(word: String, list: List<String>): boolean
  +getWordByIndex(list: List<String>, index: int): String
  +searchByPrefix(prefix: String, list: List<String>): List<String>
  +filterByKeyword(keyword: String, list: List<String>): List<String>
  +searchExactPhrase(phrase: String, names: String[]): boolean
}

class Main {
  -{static} log: Logger = LoggerFactory.getLogger(Main.class)
  --
  +{static} main(args: String[]): void
}

class Calculator {
  +{static} EMPTY: String = "empty"
  --
  +multiply(a: int, b: int): int
  +concat(a: String, b: String): String
  +sum(a: double, b: double): double
  +discount(amount: double, percent: double): double
  +calculateTotal(amounts: List<Double>): double
}

Order *-- Calculator
Order o-- Article
Article *-- Calculator
@enduml