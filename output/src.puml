' Generated by UML Generator
' Encoded: dLTRJzim57xlhx3sL4QBfZrM6m9QGDMWgrIsQPkcoaqEnSAn8zi1CiH--tpBnRcqR2-aET-vtt8uaGeBbILq8Ey9Ix702Oeebl9KAK4scO9vnDcA_0RqRd17Oa0H4H65mS1oeLEXY7wz0QccM09w7Y0qneuuAL136-i_VoIeB-dmO88UE8aDOGlgKd1jBU4PKtN4Q9mH6HawnDtu9IW5GfwoUEL-DHbk-4f7mRQQOmQtEADgofbK8eiK5oNpIn7C5DCeerXZOJnHIP_KUFgZCjBNsXX9QTv7_m62zs7hDSieRQ8kb3fL6IyvYx1QTF3FUBQXqEHVm1OhyW2hB6a9W4jt7tqzPm-OafYtqwmmRHhwYYF2GwHCz6SHGoF7t90c3jcTsKlVCosh7gowfjElyoHLkJMphvsQagzfeHLW4Tsvu5nWqbCc9ROxFCTr_eGZjRmJEZzDXlTxEHp3DvtIVcIzuEf2fsa7In-7pfE1p_8vY-6fvTvksAa_ovS2RiaUT8-F9HkHjjcQN1U4wYgUvPyWV-p8HGFUOmp4phhRXjgrBT17nE2nHXWU66OIBo7M8wMxmuwteL6Ybx9TdHdbqcnHWVChJVpWz-bnqK67le-hdqrz8xHVcnNNctZkPKrqfJU7iWOqjLUPCl9NWIMZfTDpex71-WeV0qlX_CTsqNceO_ez_jBuPlr7jHXFDWBgjOemKoJ6yGGHfWmX5Q1RiURKEDRhCmEc0gAjddV4rQzu2MsCK61XX4Bz8zJINbHpOVMqQkd9ePKmkrDlqSYwg8nWIGqS2YMNrhcm9h8aXww7ahCYZ9PmXRH3RJT5TIZqT4KNW-BLjzKdgxNGRRSSocgpcfqHJja4sPPr9DEn6yufOEPzg2_5Dlj8PrCZHLBhDGiMPceVUmpNNusEsyOcl7VFVzGYMz-Tr3ugDGmd88lNdxzgAIZpUOq9SvFth6TUj_mBedohZV7j5ipSkHyNsEpP_CYi5KiO6i4Zg-EW7A1IHQB18HRRq7ZVTUTgMGgVNozllXU2seCtO4w4DwMLf3Zbi9_1JL4bFnsHlS4CN2HYKvkiMYdrpOMhqTtK-hXgnjYtwX3RJgtOKn0HL8H0gDXYu9QU4vM-XEuGF0usOVDkVpiUbzTwnnbiuDhb6zvl1dHtMt3z679vyhZlOvSQn6kcYzNSO3m15kl_KVu2
' URL: http://www.plantuml.com/plantuml/uml/dLTRJzim57xlhx3sL4QBfZrM6m9QGDMWgrIsQPkcoaqEnSAn8zi1CiH--tpBnRcqR2-aET-vtt8uaGeBbILq8Ey9Ix702Oeebl9KAK4scO9vnDcA_0RqRd17Oa0H4H65mS1oeLEXY7wz0QccM09w7Y0qneuuAL136-i_VoIeB-dmO88UE8aDOGlgKd1jBU4PKtN4Q9mH6HawnDtu9IW5GfwoUEL-DHbk-4f7mRQQOmQtEADgofbK8eiK5oNpIn7C5DCeerXZOJnHIP_KUFgZCjBNsXX9QTv7_m62zs7hDSieRQ8kb3fL6IyvYx1QTF3FUBQXqEHVm1OhyW2hB6a9W4jt7tqzPm-OafYtqwmmRHhwYYF2GwHCz6SHGoF7t90c3jcTsKlVCosh7gowfjElyoHLkJMphvsQagzfeHLW4Tsvu5nWqbCc9ROxFCTr_eGZjRmJEZzDXlTxEHp3DvtIVcIzuEf2fsa7In-7pfE1p_8vY-6fvTvksAa_ovS2RiaUT8-F9HkHjjcQN1U4wYgUvPyWV-p8HGFUOmp4phhRXjgrBT17nE2nHXWU66OIBo7M8wMxmuwteL6Ybx9TdHdbqcnHWVChJVpWz-bnqK67le-hdqrz8xHVcnNNctZkPKrqfJU7iWOqjLUPCl9NWIMZfTDpex71-WeV0qlX_CTsqNceO_ez_jBuPlr7jHXFDWBgjOemKoJ6yGGHfWmX5Q1RiURKEDRhCmEc0gAjddV4rQzu2MsCK61XX4Bz8zJINbHpOVMqQkd9ePKmkrDlqSYwg8nWIGqS2YMNrhcm9h8aXww7ahCYZ9PmXRH3RJT5TIZqT4KNW-BLjzKdgxNGRRSSocgpcfqHJja4sPPr9DEn6yufOEPzg2_5Dlj8PrCZHLBhDGiMPceVUmpNNusEsyOcl7VFVzGYMz-Tr3ugDGmd88lNdxzgAIZpUOq9SvFth6TUj_mBedohZV7j5ipSkHyNsEpP_CYi5KiO6i4Zg-EW7A1IHQB18HRRq7ZVTUTgMGgVNozllXU2seCtO4w4DwMLf3Zbi9_1JL4bFnsHlS4CN2HYKvkiMYdrpOMhqTtK-hXgnjYtwX3RJgtOKn0HL8H0gDXYu9QU4vM-XEuGF0usOVDkVpiUbzTwnnbiuDhb6zvl1dHtMt3z679vyhZlOvSQn6kcYzNSO3m15kl_KVu2
' Generated on: 2025-10-23T19:58:50.179874

@startuml
skinparam classAttributeIconSize 0
hide circle

class ArticleTestCase {
  -article: Article
  --
  ~setUp(): void
  ~getGrossAmount(): void
  ~TestDiscountedAmount(): void
  ~TestGettersAndSetters(): void
  ~TestToStringAndDefaultConstructor(): void
}

class CalculatorTestCase {
  -calculator: Calculator
  --
  ~setUp(): void
  ~TestMultiply(): void
  ~TestMultiplyZero(): void
  ~TestMultiply__null(): void
  ~TestString(): void
  ~testConcatNull(): void
  ~TestDouble(): void
  ~testNegativeSum(): void
  ~TestDescount(): void
  ~TestDescount_Invalido(): void
  ~TestTotal(): void
  ~testVacioTotal(): void
}

class OrderTestCase {
  -order: Order
  --
  ~setUp(): void
  ~TestGetGrossTotal(): void
  ~TestGetDiscountedTotal(): void
  ~testEmptyOrder(): void
  ~TestGettersAndSetter(): void
  ~testDefaultConstructor(): void
}

class SearcherTest {
  -searcher: Searcher
  --
  ~setUp(): void
  ~TestSearchExactPhrase(): void
  ~Test2SearchExactPhrase(): void
  ~TestSearchWord(): void
  ~TestSearchWord_NotFound(): void
  ~TestSearchWordNotFound(): void
  ~TestGetWordByIndex(): void
  ~Test2GetWordByIndex(): void
  ~TestSearchByPrefix(): void
  ~TestSearchByPrefix_NotFound(): void
  ~TestSearchByPrefix_isVacio(): void
  ~TestFilterByKeyword(): void
  ~TestFilterByKeyword_NotFound(): void
  ~TestSearcherConstructor(): void
}

class Order {
  -calculator: Calculator = new Calculator()
  -idPedido: String
  -listaArticulos: ArrayList<Article>
  --
  +Order()
  +Order(idPedido: String, listaArticulos: ArrayList<Article>)
  +getIdPedido(): String
  +setIdPedido(idPedido: String): void
  +getListaArticulos(): ArrayList<Article>
  +setListaArticulos(listaArticulos: ArrayList<Article>): void
  +getGrossTotal(): double
  +getDiscountedTotal(): double
}

class Article {
  -calculator: Calculator = new Calculator()
  -nombre: String
  -cantidad: int
  -precio: double
  -descuento: double
  --
  +Article()
  +Article(nombre: String, cantidad: int, precio: double, descuento: double)
  +getNombre(): String
  +setNombre(nombre: String): void
  +getCantidad(): int
  +setCantidad(cantidad: int): void
  +getPrecio(): double
  +setPrecio(precio: double): void
  +getDescuento(): double
  +setDescuento(descuento: double): void
  +getGrossAmount(): double
  +getDiscountedAmount(): double
  +toString(): String
}

class Searcher {
  +searchWord(word: String, list: List<String>): boolean
  +getWordByIndex(list: List<String>, index: int): String
  +searchByPrefix(prefix: String, list: List<String>): List<String>
  +filterByKeyword(keyword: String, list: List<String>): List<String>
  +searchExactPhrase(phrase: String, names: String[]): boolean
}

class Main {
  -{static} log: Logger = LoggerFactory.getLogger(Main.class)
  --
  +{static} main(args: String[]): void
}

class Calculator {
  +{static} EMPTY: String = "empty"
  --
  +multiply(a: int, b: int): int
  +concat(a: String, b: String): String
  +sum(a: double, b: double): double
  +discount(amount: double, percent: double): double
  +calculateTotal(amounts: List<Double>): double
}

ArticleTestCase *-- Article
CalculatorTestCase *-- Calculator
OrderTestCase *-- Order
SearcherTest *-- Searcher
Order *-- Calculator
Order o-- Article
Article *-- Calculator
@enduml